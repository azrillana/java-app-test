
name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: ${{ github.head_ref }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build and Push Docker Image
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        # Extract branch name and commit ID
        BRANCH_NAME=$(echo "${GITHUB_REF}" | sed -e "s/refs\/heads\///")
        COMMIT_ID=$(git rev-parse --short=7 HEAD)
        # Log in to DockerHub
        echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
        # Build and tag the Docker image
        docker build -t "${DOCKERHUB_USERNAME}/private-images:${{ env.IMAGE_NAME }}" .
        # Push the image to DockerHub
        docker push "${DOCKERHUB_USERNAME}/private-images:${{ env.IMAGE_NAME }}"

    - name: Replace Token
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["deployment/*.yaml"]'
        tokenPrefix: '#{'
        tokenSuffix: '}#'
      env:
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
  
  deploy-to-kubernetes:

    name: deploy-to-kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Kubeconfig
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBE_CONFIG_VIPER }} | base64 --decode > ${HOME}/.kube/config
        cat ${HOME}/.kube/config

    - name: Use context k8s cluster
      run: kubectl config use-context viper-cluster

    - name: Run Deployment
      run: kubectl apply -f deployment/
         
